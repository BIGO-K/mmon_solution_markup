@charset 'utf-8';

@use 'sass:math';
@use '../../common/helper/function' as *;
@use '../../common/helper/mixin';
@use '../../common/helper/extend';
@use '../../common/setting/const';
@use '../../style/setting/var';

/**
 * 컴포넌트
 * 버튼, 버튼그룹 등 버튼의 기본 단위
 */

/** 기본형 */
.mm_btn {
	position: relative;
	padding: 0 15px;
	width: auto;
	height: 42px;
	border-radius: 21px;
	background-color: #6a6a6a;
	@include mixin.font(#fff '1.5rem/#{math.div(42px, const.$font_size_base) * 1rem}' center);

	&::after {
		position: absolute;
		inset: 0;
		border: 1px solid transparent;
		border-radius: 42px;
		content: '';
	}

	// 사이즈 - base 제외 / 없음 null (type, height, border-radius, font-size)
	$sizes: (sm, 30px, 1.3rem), (xs, 25px, 1.2rem), (2xs, 20px, 1.2rem), (lg, 50px, 1.7rem);
	@each $type, $height, $fontSize in $sizes {
		&#{escape('.T=#{$type}')} {
			height: $height;
			border-radius: $height;
			@include mixin.font('#{$fontSize}/#{if($type == sm, math.div($height, const.$font_size_base) + 0.1rem, math.div($height, const.$font_size_base) * 1rem)}');

			&::after {
				border-radius: math.div($height, 2);
			}
			@if  $type == 2xs {
				padding: 0 10px;
			}
		}
	}

	// 색상 - base 제외 / 없음 null (type, background-color, color, border-color)
	$colors: (dark, #5c5c5c, #fff, null),
		(light, #cdcdcd, #fff, null), (lighter, #eee, #4a4a4a, null),
		(primary, var.$color_main, #fff, null), (secondary, var.$color_sub, #fff, null), (variable, var.$color_variable, #fff, null);
	@each $type, $bgColor, $fontColor, $borderColor in $colors {
		&#{escape('.T=#{$type}')}:not(#{escape('.T=line')}) {
			@if $bgColor {
				background-color: $bgColor;
				color: $fontColor;

				&::after {
					border-color: $borderColor;
				}
			}
		}
	}

	// 라인 - base 제외 / 없음 null (type, background-color, color, border-color)
	&#{escape('.T=line')} {
		background-color: #fff;
		color: #5c5c5c;

		&::after {
			border-color: #6a6a6a;
		}

		$lines: (dark, null, #2b2b2b, #2b2b2b),
			(light, null, #767676, #767676), (lighter, null, #888, #888), (lightest, null, #888, #aeaeae),
			(primary, null, var.$color_main, var.$color_main), (secondary, null, var.$color_sub, var.$color_sub), (variable, null, var.$color_variable, var.$color_variable),
			(transparent, transparent, null, null);
		@each $type, $bgColor, $fontColor, $borderColor in $lines {
			&#{escape('.T=#{$type}')} {
				@if $borderColor {
					background-color: $bgColor;
					color: $fontColor;

					&::after {
						border-color: $borderColor;
					}
				}
			}
		}
	}

	// button 비활성
	&#{escape('.T=disabled')},
	&:disabled {
		background-color: #dcdcdc !important;
		color: #767676 !important;

		&#{escape('.T=line')}::after {
			border-color: #e6e6e6 !important;
		}
	}

	+ .mm_note {
		margin-top: 8px;
	}

	+ .mm_strapline {
		margin-top: 23px;
	}
}

/** 최하단버튼 */
.mm_foot {
	margin-top: 28px;

	// .mm_btn {
	// 	width: 100%;
	// }
}

/** 버튼그룹 */
.mm_btn_box {
	@include mixin.clearfix;

	text-align: center;

	> .mm_btn {
		width: 100%;

		&:nth-child(n+2) {
			margin-top: 8px;
		}
	}

	// 가운데 (일렬)
	.mm_inline {
		@include mixin.font('0', nowrap);

		> * {
			&:nth-child(n+2) {
				margin-left: 5px;
			}
		}
	}

	// 플렉스
	> .mm_flex {
		> * {
			&:nth-child(n+2) {
				margin: 0 0 0 8px;
			}
		}
	}

	// 위치고정
	&#{escape('.T=fixed')} {
		position: fixed;
		z-index: const.$zindex_floating;
		bottom: 0;
		left: 0;
		width: 100%;

		> * {
			margin: 0;
			width: 100%;
			height: 60px;
			background-color: var.$color_main;
			transform: translate3d(0, 0, 0);
			@include mixin.font(#fff '2rem/6rem' center);

			// 폼요소 포커싱되면 페이지 하단으로 이동
			#{escape('.S=focus')} & {
				position: absolute;
				bottom: 0;
			}

			// 툴바가 없으면 화면 하단으로 이동
			#{escape('.S=toolbar-hide')} & {
				bottom: 0;
			}
		}

		#{escape('b.T=disabled')} {
			background-color: #dcdcdc;
			color: #767676;
		}

		// 장바구니
		.btn_order {
			line-height: 5.4rem;

			b {
				vertical-align: 0;
				font-size: 1.7rem;

				strong {
					vertical-align: -1px;
					@include mixin.font(v_600 '2rem');
				}

				&.text_total::after {
					position: absolute;
					top: 21px;
					right: 0;
					width: 1px;
					height: 14px;
					background-color: #fff;
					opacity: 0.4;
					content: '';
				}
			}
		}

		// 상품상세
		.btn_product-buy {
			flex: 1;
			min-width: 0;

			&:disabled {
				margin: 0;
				background-color: #dcdcdc;
				color: #767676;
				pointer-events: none;
			}
		}

		.btn_product-like {
			position: relative;
			padding: 0 1px 0 0;
			width: 61px;

			.ico_like {
				margin-top: 20px;

				&::before {
					width: 21px;
					height: 21px;
					background-color: #fff;
				}
			}

			&::after {
				position: absolute;
				top: 0;
				right: 0;
				height: 100%;
				border-left: 1px solid rgba(#fff, 0.25);
				content: '';
			}

			+ .btn_product-buy[disabled] {
				margin-left: 0;
			}
		}

		// 재입고 알림
		.btn_restock {
			flex: 1;
			min-width: 0;
		}

		// 필터및정렬
		.btn_filter-reset {
			position: relative;
			padding-right: 1px;
			width: 61px;

			i::before {
				margin-top: 17px;
				width: 23px;
				height: 24px;
				background-color: #fff;
				transform: scaleX(-1);
			}

			&::after {
				position: absolute;
				top: 0;
				right: 0;
				height: 100%;
				border-left: 1px solid rgba(#fff, 0.4);
				content: '';
			}

			+ button {
				flex: 1;
				min-width: 0;
				background-color: var.$color_main;
			}
		}

		// 래플 앱으로 보기
		.btn_app {
			width: 100%;
			line-height: 5.6rem;
		}
	}
}

/** 버튼종류 */
// 찜하기
.btn_like {
	padding: 6px;

	&#{escape('.S=switch-on')} {
		.ico_like::before {
			background-color: #f84f34 !important;
			@include mixin.svg(url('/public/images/common/ico_heart_fill.svg'));
		}

		.uico_like::before {
			@include mixin.svg(#f84f34 url('/public/images/block/common/ico_heart_fill.svg'));
		}
	}
}

// 최근 본 상품 (사이드플로팅버튼)
.btn_prodetail-lately {
	overflow: hidden;
	position: fixed;
	z-index: const.$zindex_floating;
	right: 14px;
	bottom: 130px;
	width: 46px;
	height: 46px;
	border: 1px solid #6a6a6a;
	border-radius: 100%;
	opacity: 0;
	transition: opacity const.$time_base;

	.image_product {
		display: block;
		width: 100%;
		height: 100%;
	}
	@at-root .btn_topmost#{escape('.S=btn-on')} ~ & {
		opacity: 1;
		pointer-events: auto;
	}
}